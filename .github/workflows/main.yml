name: Markdown to PDF

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - main
    # Sequence of patterns matched against refs/tags
    tags:        
      - v*
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:    
      - main
    # Sequence of patterns matched against refs/tags
    tags:        
      - v*

jobs:
  build:
    name: Upload slides
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        
      - name: Set version
        id: set_version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-prerelease${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          change_path: "Specifications"
          # Named version, will be used as suffix for name version tag
          namespace: msr-spec
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
      
      - name: md to pdf
        uses: docker://pandoc/core:2.9
        with:
          args: >-  # allows you to break string into multiple lines
            -s -o Specifications/msr-specification.pdf Specifications/msr-specification.md
            
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.set_version.outputs.version }}
          release_name: Release ${{ steps.set_version.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Specifications/msr-specification.pdf
          asset_name: msr-specification.pdf
          asset_content_type: application/pdf
